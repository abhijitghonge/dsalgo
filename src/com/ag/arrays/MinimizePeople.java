package com.ag.arrays;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.List;

import static java.util.Comparator.reverseOrder;

public class MinimizePeople {

    public static void main(String[] args) {
        String[] elements = new String[]{"345", "33", "456"};

        Arrays.sort(elements, reverseOrder());


        System.out.print("elements: ");
        for(String element:elements){
            System.out.printf("%s", element);
        }
        System.out.println();

       /* return min;
       int[] numbers = {202063,622864,783080,172026,788556,308988,541495,870671,27394,629747,471622,126823,725800,332447,337984,666579,424743,378302,408880,543241,621139,257473,944141,760798,783262,640957,659002,113157,232097,90577,519302,477423,876797,241547,121162,97839,806811,231080,385807,572333,510922,53450,557819,313113,657268,861219,345086,494199,215883,830932,73074,541229,822879,493684,759896,940188,666915,801499,12485,129206,653160,167904,932663,275224,180575,153612,481293,823431,64935,930258,936127,144150,763310,568971,290865,172441,454133,784457,953151,286116,480605,786820,61201,795260,999757,515364,591500,97449,40276,379274,547684,224060,594049,762242,298057,138559,418856,814455,173487,433420,98855,522860,295953,13879,382222,792413,313655,883724,459308,121576,704278,680631,93213,263558,376567,620015,890561,479499,287393,870157,824636,51280,722053,240551,20480,625323,888710,46850,565695,474318,412364,760082,423949,830467,602425,759675,79945,598875,812742,102881,819413,328020,28499,278949,272613,193672,835682,454623,5692,39722,84184,526736,295559,629945,587015,519463,346001,911111,661196,971828,87509,371778,31983,191801,373654,200843,656900,65515,787400,232086,631117,764528,663715,616533,789121,643121,182895,403294,52200,262340,979108,1981,166106,466981,880286,182129,632234,701500,863392,770503,244461,384495,697360,697022,147865,291430,477839,75188,729665,844059,613818,767629,374287,822972,665865,794384,331531,114044,977253,249241,118885,867328,733979,875677,1676,728100,949313,138233,488047,319580,194582,430093,291385,989659,303265,662449,688443,145784,900234,317070,316768,861619,275628,75944,966112,441769,146317,951755,316373,422013,108182,275943,105868,444124,306068,702834,826632,990232,681105,920212,240114,990507,892093,427942,526670,933549,332540,294827,735489,425157,152388,121643,859771,231046,199924,511222,559365,19742,185021,613322,767987,504486,939133,162790,670950,933502,390253,598275,727779,796534,504205,19852,730430,82364,285985,712029,36474,150347,876199,336680,34339,150709,29523,677810,531268,433564,602031,306572,320811,107365,875950,760536,183740,95483,897188,577982,584526,301739,397606,503726,886952,584114,101372,337908,312690,154010,932164,350753,261341,746180,389604,891400,568350,235337,190122,24590,987356,145082,419750,293594,607366,901402,890936,72538,601457,262903,174741,765851,110988,562512,676397,672120,219010,225087,843176,805423,763681,78562,606537,839939,578143,201659,598292,296070,986725,777905,56655,174142,89191,799986,681897,46625,950818,155835,490943,576015,218980,505159,8911,193422,585381,666230,871521,294417,885099,948397,402330,557572,640303,98581,786455,253220,289369,100517,53505,756766,288027,16425,687598,833769,512374,731371,934306,888193,517101,400568,612144,722005,644505,980114,627472,553892,916335,381752,380804,117659,493726,557570,36251,611816,838408,845512,187533,925137,799327,504817,368967,657896,718945,891621,817115,380217,621676,820927,627142,27527,69046,788102,881409,203709,962604,9807,688819,335518,480046,514220,38685,175558,572864,129868,277762,184897,319105,326254,297448,97157,124044,668283,681598,472843,677283,873403,708238,982526,986046,596881,666842,603434,903749,962716,241160,543865,465624,185041,775342,120593,837553,56526,2777,438006,534006,957246,474014,721238,303875,5933,313533,818370,9953,51609,715406,129430,808302,996813,950489,15751,893047,485863,147620,236702,183503,394527,539532,730632,147756,115797,702755,634587,42042,900858,593818,248820,747478,12442,334634,942534,986048,422423,437291,483245,939739,761575,803882,882227,871880,416086,479237,488038,264715,622127,556661,198346,13756,919614,119895,669948,804441,818449,432009,921784,382073,735782,294672,537420,743416,822545,189633,594166,213314,537766,954459,192517,877511,515990,659269,130750,981056,348794,525073,53096,669728,689010,977979,384346,731378,348425,99299,255290,771529,493428,827142,945679,666836,749697,404075,207004,486470,254163,215886,269035,468833,117796,691748,890021,660815,283063,976054,106522,281631,609892,95691,949695,703001,41621,846566,792634,804140,560290,407341,342902,437359,145118,59885,905966,76489,731477,481206,911985,875285,856979,516735,638840,559732,170943,959544,801059,567310,435315,678698,29647,244160,837360,232787,583732,607598,706870,640228,135745,33500,534832,50934,752335,558995,581143,457200,648155,374282,848552,237543,657532,520994,610489,53008,495254,63981,815716,132100,420206,903496,575867,571634,385125,827518,653761,791631,667396,979919,534100,127894,103544,624983,656682,399466,246902,425450,428173,960377,762838,929050,114735,961506,27587,911705,493831,295024,229839,622755,215502,168490,189022,576960,956425,597114,846839,583696,952949,108371,852569,895055,583516,56318,763528,226698,640667,736510,118096,565771,227383,950494,280195,641806,441601,688934,422379,588970,628562,537110,864836,195419,219395,152682,455892,85788,901273,781508,348628,874881,188744,352069,676239,10950,70834,515496,240657,644239,271955,173046,746706,174010,765993,25196,162277,482161,454969,979615,459344,942531,907289,727659,315712,880025,424283,245227,779528,864862,624459,749575,713957,538896,951118,41298,601510,989486,19165,975122,743470,468620,846654,566956,378461,445695,372839,702435,252456,288389,998192,610406,785669,103905,687932,750437,607726,70269,669026,413370,819262,346882,892550,939710,873036,807730,956714,913122,136572,321652,216469,78165,652811,272775,520281,144580,298502,918097,984451,386620,800020,908594,656703,895330,58534,539712,357462,810552,962404,963345,380242,986752,359141,384821,23557,969044,647079,165814,474750,442089,517117,40276,662756,672487,321616,626432,87047,2894,803620,67132,606962,482311,139799,73738,416786,828186,704406,903803,799960,324840,781566,379339,539534,163431,398215,153784,859580,294285,532087,462617,19868,166088,137280,303171,889039,255191,618741,172344,8698,802218,131221,733345,753426,542120,117937,834947,206052,391933,73788,839013,434666,411327,313025,487772,549558,794396,80034,832379,319159,606023,332263,637226,361830,261998,193598,221609,882202,98876,253350,592384,113679,511025,945426,677297,673410,799311,16032,319698,826167,382822,595150,743812,500460,307544,910707,784199,610921,725640,123696,588270,154596,727515,630966,398284,200198,795701,797721,33898,854434,562219,710571,966645,425885,224501,563122,667542,69324,407931,240867,311983,412644,256877,476950,624816,903643,958832,340050,589100,949709,419974,721611,721690,930540,332196,307531,74383,995838,287423,132774,516820,373410,310343,347330,969486,699908,283140,275315,63023,890485,968470,307098,872084,292615,263503,561773,612918,744635,82934,355166,125692,957549,63040,162057,540325,869019,317320,638046,887274,156839,573562,521626,823374,290927,368467,990355,864658,559424,527049,565582,324202,330013,676946,417433,785237,965020,36833,18164,51130,40311,720956,894494,682952,251100,131625,641606,504535,361989,482201,427386,513120,962247,146843,508148,972672,26189,316230,790481,772633,859705,427003,308973,33413,470462,172121,719555,930729,21114,956032,183014,962914,975294,166023,821426,872429,901187,977093,906879,301081,446568,710186,349786,904249,462461,428576,13226,741765,953009,217370,298243,517621,398663,728126,772870,627611,226119,385247,17225,705453,207735,600223,408454,413522,725294,287317,426105,508790,17000,727278,132998,985465,193113,953531,186328,97796,195766,904567,86899,661947,424179,76189,113197,644151,216024,478942,116437,493494,219601,210163,640557,745651,623452,648100,692087,237714,630779,595920,650697,459063,317923,245781,362944,356404,869144,306707,942038,252694,385334,804419,43143,877432,646558,585028,831078,127220,376174,84723,843091,204907,510164,941827,362072,895508,106603,806537,581623,736772,722342,942549,536598,578460,272429,4316,757515,979524,65894,276661,686688,684418,190150,656620,981873,700962,598510,650382,50689,89797,939177,657323,677178,260814,143112,133829,74149,414246,542832,328340,203686,175662,105024,384919,602452,42615,899931,261367,612674,301843,836066,386131,942981,301216,909320,608812,992159,268017,569486,245286,160213,733498,334700,76703,676086,175365,194436,218747,64233,524220,131142,408864,160915,789342,225261,730246,171460,401832,904244,442955,506060,410300,767997,791209,552650,601113,166224,615413,489538,605261,733055,672453,493304,573131,243622,401450,640753,132142,859325,125835,26937,724455,233600,235858,147692,223090,682734,284433,490908,587961,679388,716781,748210,191793,868472,114473,595489,102823,106624,374596,749901,111384,24696,995004,964299,728114,148086,178501,712490,73818,702158,695705,542726,974466,380420,128636,466167,537493,17824,336750,899062,815861,368480,126812,107840,420520,66071,854739,144165,639508,791924,527096,980215,44911,359060,381334,984405,951833,483486,142728,505845,883377,914310,212745,589938,569576,68719,844911,468649,572766,746827,818367,120803,262289,663837,763583,156388,13645,156992,97787,471897,867827,874041,905152,380531,353997,429022,968164,509309,455116,191523,596333,943754,753855,513871,188673,322645,509869,514847,628041,754970,185921,920604,217210,764962,902221,323223,6749,810178,603978,815439,458600,344905,406544,37311,655887,47050,521151,173605,696219,319232,809584,995251,695753,191990,451338,201060,434491,392327,132736,636104,689208,709607,412536,143190,801742,986999,503342,989185,480900,460082,989112,544216,753944,689015,988900,689551,206183,51188,57251,965371,44026,813827,459674,769643,82477,838966,507192,996090,25995,646655,973461,113293,621590,170061,378704,894240,781966,825135,186188,850751,557100,257774,386186,749106,919509,17147,769231,617311,801220,326329,970966,883838,873918,395870,389156,654148,215853,448580,53068,942515,87512,783536,322519,973169,408284,715485,596548,336158,797067,383652,367094,448570,217453,902105,253941,348963,862146,486147,780470,516733,364686,250465,864420,578160,241613,269218,281075,248675,398373,420830,328782,869903,845958,73326,361348,839314,676591,317791,634035,313985,90319,998824,990795,254113,119249,324220,153265,419955,172559,499647,306992,972587,38024,626081,907731,561440,49482,567700};
       int B = 3619;

       numbers = new int[]{8, 7, 1, 5, 5, 10, 10, 1, 5, 3};
        B = 17;

        ArrayList<Integer> A = new ArrayList<>();
        for (int i = 0; i < numbers.length; i++) {
            A.add(numbers[i]);
        }

        MinimizePeople algo = new MinimizePeople();
        System.out.println("minimum:" + algo.solve(A, B));*/
    }

    public int findRequired(List<Integer> cities, int mid) {
        int required = 0;
        for (int people : cities) {
            required += people / mid;
        }

        return required;
    }

    public int findMaxPopulation(List<Integer> cities, int totalOffices, int minimumPopulation) {
        int atleast = 1;
        int utmost = minimumPopulation;

        int required = 0;
        int mid = 0;
        int answer = minimumPopulation;

        while (atleast <= utmost) {
            mid = atleast + (utmost - atleast) / 2;
            required = findRequired(cities, mid);

            if (required >= totalOffices) {
                answer = mid;
                atleast = mid + 1; // still go left

            } else {
                //go right
                utmost = mid - 1;
            }
        }
        return answer;
    }

    public int solve(ArrayList<Integer> A, int B) {
        int totalPopulation = 0;
        int minimumPopulation = Integer.MAX_VALUE;

        //find minimum people in cities
        for (int people : A) {
            totalPopulation += people;
            minimumPopulation = Math.min(minimumPopulation, people);
        }

        if (totalPopulation < B) {
            return 0;
        }//gov should focus on fiscal deficit rather than offices or produce more people.

        return findMaxPopulation(A, B, minimumPopulation);

    }
}
